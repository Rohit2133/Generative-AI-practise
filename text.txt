import streamlit as st
from dotenv import load_dotenv
from langchain_core.prompts import load_prompt
from langchain_huggingface import  HuggingFaceEndpoint

load_dotenv()

llm = HuggingFaceEndpoint(
    repo_id="mistralai/Mistral-7B-Instruct-v0.2",  
    task="text-generation",
    temperature=0.7,
    max_new_tokens=500
)



st.header("ðŸ“š Research Paper Explanation Tool")

paper_input = st.selectbox(
    "Select Research Paper Name", [
        "Attention Is All You Need",
        "BERT: Pre-training of Deep Bidirectional Transformers",
        "GPT-3: Language Models are Few-Shot Learners",
        "Diffusion Models Beat GANs on Image Synthesis",
        "Chain-of-Thought Prompting Elicits Reasoning in Large Language Models",
         "DALLÂ·E: Creating Images from Text",
         "Segment Anything"   
    ]
)

style_input = st.selectbox(
    "Select Explanation Style", [
        "Beginner-Friendly",
        "Technical",
        "Code-Oriented",
        "Mathematical"
    ]
)

length_input = st.selectbox(
    "Select Explanation Length", [
        "Short (1-2 paragraphs)",
        "Medium (3-5 paragraphs)",
        "Long (detailed explanation)"
    ]
)


template = load_prompt("template.json")  


if st.button("Summarize"):
    chain = template | llm
    result = chain.invoke({
        "paper_input": paper_input,
        "style_input": style_input,
        "length_input": length_input
    })

    st.markdown("### ðŸ“„ Explanation:")
    st.write(result.content)

